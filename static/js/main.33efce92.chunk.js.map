{"version":3,"sources":["atom.js","components/Bottom.js","components/ColorCard.js","components/ColorList.js","App.js","styles.js","index.js"],"names":["colorCardAtom","atom","key","default","Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","props","color","Btn","_templateObject2","BtnText","_templateObject3","IconContainer","_templateObject4","Bottom","_useState","useState","_useState2","slicedToArray","setColor","setColorCard","useSetRecoilState","setRandomColor","Math","round","random","toString","useEffect","react_default","a","createElement","index_es","onClick","icon","faRepeat","colors","length","toConsumableArray","find","item","concat","faPlus","Card","ColorCard_templateObject","color2","CardBigBox","motion","ColorCard_templateObject2","CardInfoContainer","ColorCard_templateObject3","ColorText","ColorCard_templateObject4","boxVariants","start","opacity","hover","React","memo","_ref","index","deleteColor","filter","separateColor","targetColor","arrayColor","react_beautiful_dnd_esm","draggableId","magic","snapshot","assign","combineWith","ref","innerRef","dragHandleProps","draggableProps","variants","initial","whileHover","faCopy","faTrashCan","ColorList_templateObject","ColorList","setColors","useRecoilValue","droppableId","direction","isCombineEnabled","ColorList_Wrapper","droppableProps","map","components_ColorCard","split","includes","placeholder","App_templateObject","App","_useRecoilState","useRecoilState","_useRecoilState2","Fragment","App_Wrapper","onDragEnd","event","console","log","combine","combineColor","removeColors","components_ColorList","components_Bottom","GlobalStyle","createGlobalStyle","styles_templateObject","ReactDOM","createRoot","document","getElementById","render","es","src_App"],"mappings":"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","file":"static/js/main.33efce92.chunk.js","sourcesContent":["import { atom } from \"recoil\";\n\nexport const colorCardAtom = atom({\n  key: \"colorCard\",\n  default: [\"#f92ecc\", \"#4877cc\", \"#1994bb\", \"#c261c0\", \"#67e5c7\"],\n});\n","import { faPlus, faRepeat } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { colorCardAtom } from \"../atom\";\n\nconst Wrapper = styled.div`\n  height: 30vh;\n  background-color: ${(props) => props.color};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  transition: background-color linear 0.5s;\n`;\n\nconst Btn = styled.div`\n  padding: 20px;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 28px;\n  user-select: none;\n`;\n\nconst BtnText = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const IconContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 20px;\n  svg {\n    cursor: pointer;\n    &:hover {\n      color: greenyellow;\n    }\n    transition: all linear 0.2s;\n  }\n`;\n\nfunction Bottom() {\n  const [color, setColor] = useState();\n  const setColorCard = useSetRecoilState(colorCardAtom);\n  const setRandomColor = () => {\n    const color = \"#\" + Math.round(Math.random() * 0xffffff).toString(16);\n    setColor(color);\n  };\n\n  const setSaveColor = () => {\n    setColorCard((colors) => {\n      if (colors.length === 5) return [...colors];\n      const exist = colors.find((item) => item === color);\n      if (!exist) return [...colors, color];\n      return [...colors];\n    });\n  };\n\n  useEffect(() => setRandomColor(), []);\n\n  return (\n    <Wrapper color={color}>\n      <Btn>\n        <BtnText>\n          <span>{color}</span>\n          <IconContainer>\n            <FontAwesomeIcon\n              onClick={setRandomColor}\n              icon={faRepeat}\n            ></FontAwesomeIcon>\n            <FontAwesomeIcon\n              onClick={setSaveColor}\n              icon={faPlus}\n            ></FontAwesomeIcon>\n          </IconContainer>\n        </BtnText>\n      </Btn>\n    </Wrapper>\n  );\n}\n\nexport default Bottom;\n","import {\n  faCopy,\n  faRepeat,\n  faTrashCan,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { motion } from \"framer-motion\";\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { colorCardAtom } from \"../atom\";\nimport { IconContainer } from \"./Bottom\";\n\nconst Card = styled.div`\n  background: linear-gradient(\n    45deg,\n    ${(props) => props.color},\n    ${(props) => props.color2}\n  );\n  width: 100%;\n  height: 100%;\n`;\n\nconst CardBigBox = styled(motion.div)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\nconst CardInfoContainer = styled(motion.div)`\n  padding: 20px;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: white;\n  font-size: 28px;\n  user-select: none;\n`;\n\nconst ColorText = styled.div``;\n\nconst boxVariants = {\n  start: { opacity: 0 },\n  hover: {\n    opacity: 1,\n  },\n};\n\nfunction ColorCard({ color, color2, index }) {\n  const setColorCard = useSetRecoilState(colorCardAtom);\n  const deleteColor = () => {\n    setColorCard((colors) => {\n      const deleteColor = color !== color2 ? `${color}+${color2}` : color;\n      return colors.filter((item) => item !== deleteColor);\n    });\n  };\n\n  const separateColor = () => {\n    setColorCard((colors) => {\n      if (color !== color2 && colors.length > 4) {\n        return [...colors];\n      }\n      const targetColor = color !== color2 ? `${color}+${color2}` : color;\n      const arrayColor = colors.filter((item) => item !== targetColor);\n      return [...arrayColor, color, color2];\n    });\n  };\n\n  return (\n    <Draggable\n      draggableId={color !== color2 ? `${color}+${color2}` : color}\n      index={index}\n      key={color !== color2 ? `${color}+${color2}` : color}\n    >\n      {(magic, snapshot) => (\n        <Card\n          color={color}\n          color2={color2}\n          combineWith={snapshot.combineWith}\n          ref={magic.innerRef}\n          {...magic.dragHandleProps}\n          {...magic.draggableProps}\n        >\n          <CardBigBox variants={boxVariants} initial=\"start\" whileHover=\"hover\">\n            <CardInfoContainer>\n              <ColorText>\n                {color !== color2 ? `${color}+${color2}` : color}\n              </ColorText>\n              <IconContainer>\n                <FontAwesomeIcon icon={faCopy}></FontAwesomeIcon>\n                {color !== color2 ? (\n                  <FontAwesomeIcon\n                    onClick={separateColor}\n                    icon={faRepeat}\n                  ></FontAwesomeIcon>\n                ) : null}\n                <FontAwesomeIcon\n                  onClick={deleteColor}\n                  icon={faTrashCan}\n                ></FontAwesomeIcon>\n              </IconContainer>\n            </CardInfoContainer>\n          </CardBigBox>\n        </Card>\n      )}\n    </Draggable>\n  );\n}\n\nexport default React.memo(ColorCard);\n","import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { useRecoilValue } from \"recoil\";\nimport styled from \"styled-components\";\nimport { colorCardAtom } from \"../atom\";\nimport ColorCard from \"./ColorCard\";\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  align-items: center;\n  justify-items: center;\n  height: 70vh;\n`;\n\nfunction ColorList() {\n  const setColors = useRecoilValue(colorCardAtom);\n  return (\n    <Droppable droppableId=\"colors\" direction=\"horizontal\" isCombineEnabled>\n      {(magic) => (\n        <Wrapper ref={magic.innerRef} {...magic.droppableProps}>\n          {setColors.map((color, index) => (\n            <ColorCard\n              key={color}\n              color={color.split(\"+\")[0]}\n              color2={color.includes(\"+\") ? color.split(\"+\")[1] : color}\n              index={index}\n            />\n          ))}\n          {magic.placeholder}\n        </Wrapper>\n      )}\n    </Droppable>\n  );\n}\n\nexport default ColorList;\n","import React from \"react\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { colorCardAtom } from \"./atom\";\nimport Bottom from \"./components/Bottom\";\nimport ColorList from \"./components/ColorList\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n`;\n\nfunction App() {\n  const [colorCard, setColorCard] = useRecoilState(colorCardAtom);\n  const onDragEnd = (event) => {\n    console.log(event);\n    if (event.combine) {\n      if (\n        event.draggableId.includes(\"+\") ||\n        event.combine.draggableId.includes(\"+\")\n      )\n        return;\n      const combineColor = `${event.draggableId}+${event.combine.draggableId}`;\n      console.log(combineColor);\n      setColorCard((colors) => {\n        const removeColors = colors.filter(\n          (item) =>\n            item !== event.draggableId && item !== event.combine.draggableId\n        );\n        return [...removeColors, combineColor];\n      });\n    }\n  };\n  return (\n    <>\n      <Wrapper>\n        <DragDropContext onDragEnd={onDragEnd}>\n          <ColorList />\n        </DragDropContext>\n        <Bottom />\n      </Wrapper>\n    </>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { RecoilRoot } from \"recoil\";\nimport App from \"./App\";\nimport { GlobalStyle } from \"./styles\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <RecoilRoot>\n    <GlobalStyle />\n    <App />\n  </RecoilRoot>\n);\n"],"sourceRoot":""}